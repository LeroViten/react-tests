{"version":3,"sources":["components/WeatherForm/WeatherForm.jsx","components/WeatherError/error.png","components/WeatherError/WeatherError.jsx","components/WeatherView/WeatherView.jsx","components/WeatherLoader/search.png","components/WeatherLoader/WeatherLoader.jsx","components/WeatherInfo/WeatherInfo.jsx","App.js","index.js"],"names":["WeatherForm","state","cityName","handleInputChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","type","placeholder","onChange","style","marginRight","Component","WeatherError","message","role","src","errorImage","width","alt","WeatherView","name","weather","main","Math","round","temp","humidity","wind","speed","Date","sys","sunrise","toString","sunset","WeatherLoader","size","className","searchImage","WeatherInfo","status","prevProps","prevState","prevCity","currentCity","request","setTimeout","fetch","then","res","ok","json","Promise","reject","Error","catch","App","handleFormSubmit","transition","Zoom","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30289d2f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class WeatherForm extends Component {\r\n  state = {\r\n    cityName: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ cityName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.cityName.trim() === '') {\r\n      return toast.error('Enter city name');\r\n    }\r\n    this.props.onSubmit(this.state.cityName);\r\n    this.setState({ cityName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type in your city\"\r\n            value={this.state.cityName}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">\r\n          <ImSearch style={{ marginRight: 5 }} />\r\n          Search\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.52d6fea7.png\";","import errorImage from './error.png';\r\n\r\nexport default function WeatherError({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>{message}</p>\r\n      <img src={errorImage} width=\"640\" alt=\"error\" />\r\n    </div>\r\n  );\r\n}\r\n","export default function WeatherView({ cityName }) {\r\n  return (\r\n    <div>\r\n      <h2>Weather for {cityName.name}</h2>\r\n      <p>Forecast: {cityName.weather[0].main}</p>\r\n      {/* {https://openweathermap.org/img/wn/{cityName.weather[0].icon}.png} */}\r\n      <p>Temperature: {Math.round(cityName.main.temp - 273.15)} Â°C</p>\r\n      <p>Humidity: {cityName.main.humidity}</p>\r\n      <p>Wind Speed: {cityName.wind.speed} km/h</p>\r\n      <p>Sunrise: {new Date(cityName.sys.sunrise * 1000).toString()}</p>\r\n      <p>Sunset: {new Date(cityName.sys.sunset * 1000).toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/search.b386fc74.png\";","import { ImSpinner } from 'react-icons/im';\r\nimport './WeatherLoader.scss';\r\nimport searchImage from './search.png';\r\n\r\nexport default function WeatherLoader({ cityName }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <div>\r\n        <ImSpinner size=\"24\" className=\"icon-spin\" />\r\n        <span> Loading...</span>\r\n      </div>\r\n      <img src={searchImage} alt=\"Search\" width=\"120\" />\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\nimport WeatherError from '../WeatherError/WeatherError';\r\nimport WeatherView from '../WeatherView/WeatherView';\r\nimport WeatherLoader from '../WeatherLoader/WeatherLoader';\r\n\r\nexport default class WeatherInfo extends Component {\r\n  state = {\r\n    cityName: null,\r\n    error: null,\r\n    status: 'idle',\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevCity = prevProps.cityName;\r\n    const currentCity = this.props.cityName;\r\n    const API_KEY = '7c511c1fd9bf88bf9a9d5d01c37e0441';\r\n    const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n    const request = `?q=${currentCity}&appid=${API_KEY}`;\r\n\r\n    if (prevCity !== currentCity) {\r\n      this.setState({ status: 'pending' });\r\n      setTimeout(() => {\r\n        fetch(BASE_URL + request)\r\n          .then(res => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            }\r\n            return Promise.reject(new Error(`No ${currentCity} found`));\r\n          })\r\n          .then(cityName => this.setState({ cityName, status: 'resolved' }))\r\n          .catch(error => this.setState({ error, status: 'rejected' }));\r\n      }, 1500);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { cityName, status, error } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <h2>Enter your city name!</h2>;\r\n    }\r\n    if (status === 'pending') {\r\n      return <WeatherLoader cityName={cityName} />;\r\n    }\r\n    if (status === 'rejected') {\r\n      return <WeatherError message={error.message} />;\r\n    }\r\n    if (status === 'resolved') {\r\n      return <WeatherView cityName={cityName} />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport WeatherForm from './components/WeatherForm/WeatherForm';\r\nimport WeatherInfo from './components/WeatherInfo/WeatherInfo';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    cityName: '',\r\n  };\r\n\r\n  handleFormSubmit = cityName => {\r\n    this.setState({ cityName });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <WeatherForm onSubmit={this.handleFormSubmit} />\r\n        <WeatherInfo cityName={this.state.cityName} />\r\n        <ToastContainer transition={Zoom} autoClose={3000} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}